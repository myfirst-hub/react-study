{"version":3,"sources":["react-dom/index.js","react/component.js","react/index.js","index.js"],"names":["ReactDOM","render","vnode","container","appendChild","_render","renderComponent","comp","base","renderer","componentWillUpdate","componentDidUpdate","componentDidMount","parentNode","console","log","nodeType","replaceChild","setComponentProps","props","componentWillMount","componentReceiveProps","createComponent","inst","prototype","Component","constructor","undefined","String","document","createTextNode","tag","attrs","childrens","dom","createElement","Object","keys","forEach","key","value","setAttribute","node","test","toLowerCase","style","cssText","k","removeAttribute","state","stateChange","assign","React","Home","num","setState","handleClick","bind","title","querySelector"],"mappings":"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","file":"react-simple-component.e31bb0bc.js","sourceRoot":"..","sourcesContent":["import Component from '../react/component';\r\n\r\nconst ReactDOM = {\r\n  render,\r\n}\r\n\r\nfunction render(vnode, container){\r\n  return container.appendChild(_render(vnode));\r\n}\r\n\r\nexport function renderComponent(comp){\r\n  let base;\r\n  const renderer = comp.render(); // jsx对象\r\n  base = _render(renderer);\r\n  if(comp.base && comp.componentWillUpdate){\r\n    comp.componentWillUpdate();\r\n  }\r\n  if(comp.base){\r\n    if(comp.componentDidUpdate) comp.componentDidUpdate();\r\n  }else{\r\n    if(comp.componentDidMount) comp.componentDidMount();\r\n  }\r\n\r\n  // 节点替换\r\n  if(comp.base && comp.base.parentNode){\r\n    console.log('comp.base.parentNode......................', comp.base.parentNode)\r\n    console.log('comp.base......................', comp.base)\r\n    console.log('base.111.....................', base.nodeType)\r\n    comp.base.parentNode.replaceChild(base, comp.base);\r\n  }\r\n  comp.base = base;\r\n  console.log('comp..............', comp);\r\n}\r\n\r\nfunction setComponentProps(comp, props){\r\n  if(!comp.base){\r\n    if(comp.componentWillMount) comp.componentWillMount();\r\n  }else if(comp.componentReceiveProps){\r\n    comp.componentReceiveProps();\r\n  }\r\n  // 设置组件的属性\r\n  comp.props = props;\r\n  // 渲染组件\r\n  renderComponent(comp);\r\n\r\n}\r\n\r\nfunction createComponent(comp, props){\r\n  let inst;\r\n  if(comp.prototype && comp.prototype.render){\r\n    // 如果是类定义的组件 则创建实例返回\r\n    inst = new comp(props);\r\n  }else{\r\n    // 如果是函数组件 将函数组件扩展成类组件 方便后面统一管理\r\n    inst = new Component(props);\r\n    inst.constructor = comp;\r\n    inst.render = function(){\r\n      return this.constructor(props);\r\n    }\r\n  }\r\n  console.log('inst......................', inst)\r\n  return inst;\r\n}\r\n\r\nfunction _render(vnode) {\r\n  // console.log('vnode.........', vnode);\r\n  if (vnode === undefined || vnode === null || typeof vnode === 'boolean') vnode = '';\r\n  // 如果是数字转成字符串\r\n  if(typeof vnode === 'number') vnode = String(vnode);\r\n  // 如果vnode是字符串\r\n  if (typeof vnode === 'string') {\r\n    console.log('vnode......................', vnode.nodeType)\r\n    // 创建文本节点\r\n    return document.createTextNode(vnode);\r\n  }\r\n\r\n  // 如果tag是函数，则渲染组件\r\n  if(typeof vnode.tag === 'function'){\r\n    // console.log('vnode.tag..............', vnode.tag);\r\n    // console.log('vnode.attrs..............', vnode.attrs);\r\n    // 1.创建组件\r\n    const comp = createComponent(vnode.tag, vnode.attrs);\r\n    // console.log('comp..............', comp);\r\n    // return;\r\n    // 2. 设置组件的属性\r\n    setComponentProps(comp, vnode.attrs);\r\n    // 3.组件渲染的节点对象返回\r\n    return comp.base;\r\n  }\r\n\r\n\r\n  // 否则就是虚拟DOM对象\r\n  const {\r\n    tag,\r\n    attrs,\r\n    childrens = [],\r\n  } = vnode;\r\n  // 创建节点对象\r\n  const dom = document.createElement(tag);\r\n  if (attrs) {\r\n    // 有属性\r\n    Object.keys(attrs).forEach(key => {\r\n      const value = attrs[key];\r\n      setAttribute(dom, key, value);\r\n    });\r\n  }\r\n\r\n  // 递归渲染子节点\r\n  childrens.forEach(node => {\r\n    render(node, dom)\r\n  });\r\n\r\n  return dom;\r\n\r\n  // 设置属性\r\n  function setAttribute(dom, key, value) {\r\n    //将属性名className转换成class\r\n    if (key === 'className') {\r\n      key = 'class';\r\n    }\r\n    // 如果是事件 onClick onBlur ...\r\n    if (/on\\w+/.test(key)) {\r\n      //转小写\r\n      key = key.toLowerCase();\r\n      dom[key] = value || '';\r\n    } else if (key === 'style') { // 针对属性为style的处理\r\n      if (!value || typeof value === 'string') {\r\n        dom.style.cssText = value || '';\r\n      } else if (value && typeof value === 'object') {\r\n        for (let k in value) {\r\n          // {width: 20}\r\n          if (typeof value[k] === 'number') {\r\n            dom.style[k] = value[k] + 'px';\r\n          } else {\r\n            dom.style[k] = value[k];\r\n          }\r\n        }\r\n      }\r\n    } else {\r\n      // console.log('dom................', dom);\r\n      // console.log('key................', key);\r\n      // console.log('key in dom................', key in dom);\r\n      // 其他属性\r\n      if (key in dom) {\r\n        dom[key] = value || ''\r\n      }\r\n      if (value) {\r\n        // 更新值\r\n        dom.setAttribute(key, value);\r\n      } else {\r\n        dom.removeAttribute(key);\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport default ReactDOM;","import { renderComponent } from '../react-dom';\r\n\r\nclass Component{\r\n  constructor(props = {}){\r\n    this.props = props;\r\n    this.state = {};\r\n  }\r\n  setState(stateChange){\r\n    // 对象拷贝\r\n    Object.assign(this.state, stateChange);\r\n    // 渲染组件\r\n    renderComponent(this);\r\n  }\r\n}\r\n\r\nexport default Component;","import Component from './component';\r\n\r\nconst React = {\r\n  createElement,\r\n  Component\r\n}\r\n\r\nfunction createElement(tag, attrs, ...childrens){\r\n  return {\r\n    tag, // 外层的标签\r\n    attrs, // 属性 是一个对象\r\n    childrens, // 是一个数组\r\n  }\r\n}\r\n\r\nexport default React;","import React from './react';\r\nimport ReactDOM from './react-dom';\r\n\r\n// const ele = (\r\n//   <div className='active' title='123'>\r\n//     hello,<span>react</span>\r\n//   </div>\r\n// )\r\n\r\n// function Home(){\r\n//   return (\r\n//     <div>\r\n//       hello,<span>react</span>\r\n//     </div>\r\n//   )\r\n// }\r\n\r\nclass Home extends React.Component{\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      num: 0\r\n    };\r\n  }\r\n  componentWillMount(){\r\n    console.log('组件将要加载');\r\n  }\r\n  componentReceiveProps(){\r\n    console.log('props');\r\n  }\r\n  componentDidMount(){\r\n    console.log('组件加载完成');\r\n  }\r\n  componentWillUpdate(){\r\n    console.log('组件将要更新');\r\n  }\r\n  componentDidUpdate(){\r\n    console.log('组件更新完成');\r\n  }\r\n  handleClick(){\r\n    this.setState({\r\n      num: this.state.num + 1,\r\n    });\r\n  }\r\n  render(){\r\n    return (\r\n      <div>\r\n        hello,\r\n        <span>react{this.state.num}</span>\r\n        <button onClick={this.handleClick.bind(this)}>点我</button>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst title = 'active';\r\n\r\n// 核心：组件化开发\r\n\r\n// 两个问题：\r\n// 1.为什么ReactDOM.render()必须引入React？\r\n// 2.组件：函数组件，类组件\r\n\r\nReactDOM.render('ele', document.querySelector('#root'));\r\n// ReactDOM.render(ele, document.querySelector('#root'));\r\n// ReactDOM.render(<Home name={title} />, document.querySelector('#root'));\r\n\r\n// const ele = /*#__PURE__*/React.createElement(\"div\", {\r\n//   className: \"active\",\r\n//   title: \"123\"\r\n// }, \"hello,\", /*#__PURE__*/React.createElement(\"span\", null, \"react\"));"]}