{
  "compilerOptions": {
      "outDir": "./dist/",
      "sourceMap": true,
      "noImplicitAny": true,
      "module": "commonjs",
      "target": "es5",
      "jsx": "react",
      "esModuleInterop": true,
      "experimentalDecorators": true,
      // "allowJs": true, 
  },
  "include": [
      "./src/**/*"
  ]
}

// {

//   “编译器选项”：{
  
//   /*基本选项*/
  
//   “target”：“es5”，/*指定ECMAScript目标版本：“ES3”（默认）、“es5”、“ES2015”、“ES2016”、“ES2017”、“ES2018”或“ESNEXT”*/
  
//   “module”：“commonjs”，/*指定模块代码生成：“none”、“commonjs”、“amd”、“system”、“umd”、“es2015”或“ESNext”*/
  
//   //“lib”：[]，/*指定要包含在编译中的库文件*/
  
//   “allowJs”：true，/*允许编译javascript文件*/
  
//   //“checkJs”：true，/*报告.js文件中的错误*/
  
//   //“jsx”：“preserve”，/*指定jsx代码生成：“preserve”、“react native”或“react”*/
  
//   //“declaration”：true，/*生成相应的.d.ts文件*/
  
//   //“declarationMap”：true，/*为每个对应的“.d.ts”文件生成一个sourcemap*/
  
//   //“sourceMap”：true，/*生成相应的“.map”文件*/
  
//   //“outFile”：“../”，/*连接并向单个文件发出输出*/
  
//   “outDir”：“../js”，/*将输出结构重定向到目录*/
  
//   //“rootDir”：“../”，/*指定输入文件的根目录。用于使用--outDir控制输出目录结构*/
  
//   //“composite”：true，/*启用项目编译*/
  
//   //“removeComments”：true，/*不向输出发出注释*/
  
//   //“noEmit”：true，/*不发出输出*/
  
//   //“importHelpers”：true，/*Import emit helpers from'tslib'*/
  
//   //“downlevelIteration”：true，/*在针对“ES5”或“ES3”时，在“for of”、“spread”和“destructuring”中为iterables提供全面支持*/
  
//   //“isolatedModules”：true，/*将每个文件作为单独的模块进行传输（类似于“ts.transpileModule”）*/
  
//   /*严格类型检查选项*/
  
//   “strict”：true，/*启用所有严格类型检查选项*/
  
//   //“noImplicitAny”：true，/*对隐含“any”类型的表达式和声明引发错误*/
  
//   //“strictNullChecks”：true，/*启用严格null检查*/
  
//   //“strictFunctionTypes”：true，/*启用函数类型的严格检查*/
  
//   //“strictPropertyInitialization”：true，/*启用类中属性初始化的严格检查*/
  
//   //“noImplicitThis”：true，/*对隐含“any”类型的“this”表达式引发错误*/
  
//   //“alwaysStrict”：true，/*以严格模式解析，并为每个源文件发出“use strict”*/
  
//   /*附加检查*/
  
//   //“NonuUsedLocals”：true，/*报告未使用的局部变量的错误*/
  
//   //“NonuUsedParameters”：true，/*报告未使用参数的错误*/
  
//   //“noImplicitReturns”：true，/*当函数中并非所有代码路径都返回值时报告错误*/
  
//   //“noFallthroughCasesInSwitch”：true，/*在switch语句中报告错误*/
  
//   /*模块分辨率选项*/
  
//   //“moduleResolution”：“node”，/*指定模块解析策略：“node”（node.js）或“classic”（TypeScript pre-1.6）*/
  
//   //“baseUrl”：“../”，/*用于解析非绝对模块名称的基本目录*/
  
//   //“paths”：{}，/*一系列条目，将导入重新映射到相对于“baseUrl”的查找位置*/
  
//   //“rootDirs”：[]，/*根文件夹列表，其组合内容表示运行时项目的结构*/
  
//   //“typeRoots”：[]，/*要包含其中类型定义的文件夹列表*/
  
//   //“types”：[]，/*要包含在编译中的类型声明文件*/
  
//   //“allowSyntheticDefaultImports”：true，/*允许从没有默认导出的模块进行默认导入。这并不影响代码的发出，只是类型检查*/
  
//   “esModuleInterop”：true，/*通过为所有导入创建命名空间对象，启用CommonJS和ES模块之间的互操作性。表示“allowSyntheticDefaultImports”*/
  
//   //“preserveSymlinks”：true，/*不解析符号链接的实际路径*/
  
//   /*源映射选项*/
  
//   //“sourceRoot”：“../”，/*指定调试器应在其中定位TypeScript文件的位置，而不是源位置*/
  
//   //“mapRoot”：“../”，/*指定调试器应该定位映射文件的位置，而不是生成的位置*/
  
//   //“inlineSourceMap”：true，/*使用源映射发出单个文件，而不是单独的文件*/
  
//   //“inlineSources”：true，/*在单个文件中沿源映射发出源；
  

//     /* Experimental Options */
//     "experimentalDecorators": true,        /* Enables experimental support for ES7 decorators. */
//     // "emitDecoratorMetadata": true,         /* Enables experimental support for emitting type metadata for decorators. */
//   }
// }
// /*实验选项*/

// “experimentalDecorators”：true，/*支持ES7装饰器的实验性支持*/

// //“emitDecoratorMetadata”：true，/*支持实验性地为decorator发出类型元数据*/

// }

// }