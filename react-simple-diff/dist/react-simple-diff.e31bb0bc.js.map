{"version":3,"sources":["react-dom/diff.js","react-dom/index.js","react/component.js","react/index.js","index.js"],"names":["diff","dom","vnode","container","ret","diffNode","console","log","appendChild","out","undefined","String","nodeType","textContent","document","createTextNode","parentNode","replaceNode","createElement","tag","childrens","length","childNodes","diffChildren","diffAttribute","vchildren","domChildren","children","keyed","min","childrenLen","forEach","vchild","i","key","child","j","c","f","nextSibling","removeNode","insertBefore","oldAttrs","newAttrs","attrs","domAttrs","attributes","item","name","value","ReactDOM","render","_render","renderComponent","comp","base","renderer","componentWillUpdate","componentDidUpdate","componentDidMount","replaceChild","setComponentProps","props","componentWillMount","componentReceiveProps","createComponent","inst","prototype","Component","constructor","Object","keys","setAttribute","node","test","toLowerCase","style","cssText","k","removeAttribute","state","stateChange","assign","React","ele","Home","num","setState","handleClick","bind","title","querySelector"],"mappings":";;AIAA;;AACA;;;AJDA,AEAA,ACAA;;AFAA;;AACA,AECA,IAAMmF,KAAK,GAAG;AACZjE,EAAAA,aAAa,EAAbA,aADY;AAEZkD,EAAAA,SAAS,EAATA;AAFY,CAAd;IDAMA;AACJ,ACIF,SAASlD,aAAT,CDJyB,ACIFC,GAAvB,EAAqD;AFJrD,ACAyB,ACI4B,IFJ/C+B,EEIsBN,EDJdkB,GCIuC,CFJvC,CCAW,EDAR,mEEImB,EDJd,ACI+B,EDJ5B;ADCvBX,EAAAA,MAAM,EAANA;AADe,ACAQ,ACI4B,CFJrD,mCEI2C/B,SAAU;AAAVA,IAAAA,SAAU;AHL9C,ACKP,ACHI,ACGiD,SHLrCpB,ACKPmD,ACHAW,IFFF,CAAc7D,AEEjB,CDGJ,CAAgBC,CDLT,AEEU4D,EFFS5D,ECK1B,CCHI,CDGmBC,CDLhB,EAA0BA,MCKjC,EAAkCF,CDL3B,EAAoC,ACK3C,EAAsC;ADJpC,ACKAK,ACHE,EDGFA,OAAO,ACHA0E,CDGCzE,GAAR,CAAY,ACHV,GAAa,EAAb,wBDGF,EAA2CL,KAA3C;ADJA,ACKA,ACHC,ACED,MHJME,GAAG,ACKFD,AEDA,GHJKE,MCKI,CAACG,CDLG,CAACP,GAAD,EAAMC,ICKnB,CDLa,ACKSkD,CDL7B,MCKoC,CAAClD,KAAD,CAA7B,CAAP,CAFoC,CAGpC;ADLAI,ACMD,AEFGa,EHJFb,EGIEa,GAAG,EHJE,AGILA,CHJMZ,EGGD,CHHP,CAAY,4BAAZ,EAA0CH,GAA1C;AGIO;AHHP,ACOK,AEHHwC,IAAAA,EHJCzC,GCOWkD,AEHP,EAALT,IHJF,CGEO,CHFM,OCOR,CAAyBU,IAAzB,EAA8B;ADNjCnD,ACOF,AEJS,IHHPA,ECOEoD,IAAJ,GDPW,CAAC/C,WAAV,CAAsBJ,GAAtB,AEAO6E,aAAY;AFCpB,ACOD,ACPE,ACGA7D,IAAAA,EFIIoC,OEJK,CFIG,CEJZpC,EFIekC,IAAI,CAACH,EEPf,CAGM,GFII,EAAjB,CAFmC,CAEH;ACN9BmB,ACGA,MDHAA,MAAM,CAACY,MAAP,CAAc,KAAKF,KAAnB,EAA0BC,WAA1B,EAFmB,CAGnB;AEPJ,AJME,ACOA1B,EAAAA,EGbI6B,EHaA,CGbG,EJMAhF,ACOAgD,CGZP,EJKA,ICOc,CAACI,QAAD,CAAd;AGZK,AJMN,AECG,ACHK,ECJF,CDIL,QCJc,EAAC,QAAf,gBFOkB,IAAhB;AEPsB,AHaxB,ACLC,ACEF,ECVyB,IHarBF,CGb0B,EAAC,CHavB,CAACC,IAAL,IAAaD,IAAI,CAACG,mBAArB,EAAyC;AGbzC,AJQF,ACMIH,IAAAA,IAAI,CDNCjD,ACMAoD,IGbC,IJOV,CAAkBxD,GAAlB,EAAuBC,KAAvB,ACMI,EDNyB,kCIR3B,CADF,EAMA;AACA,AJGE,ACMC,MDNGO,GAAG,GAAGR,GAAV,AGGakF,CHJc,CAE1B;AIHH;AACA,AJGG,ACKD,MDLKjF,ACKFoD,IAAI,CDLG,ACKFC,IAAR,CDLe7C,CCKF,QDLR,IAAuBR,KAAK,KAAK,IAAjC,IAAyC,OAAOA,KAAP,KAAiB,SAA9D,EAAyEA,KAAK,GAAG,EAAR,CAH/C,CAI1B;AIHH,AHQI,QAAGoD,IAAI,CAACI,kBAAR,EAA4BJ,IAAI,CAACI,kBAAL;AGPhC,AJGG,ACKA,GAFD,GDHI,GCKC,IDLMxD,EEFEkE,GFET,KAAiB,QAApB,EAA8BlE,KAAK,GAAGS,MAAM,CAACT,KAAD,CAAd,CALJ,CAM1B;AIHH,AHQI,QAAGoD,IAAI,CAACK,iBAAR,EAA2BL,IAAI,CAACK,iBAAL;ADJ5B,ACKA,GAXkC,CAanC,EDPK,OAAOzD,KAAP,KAAiB,QAArB,EAA+B;AAC9B;AACA,IIJEmF;AJKD,ACKH,MAAG/B,EDLGrD,ECKC,CDLE,ACKDsD,IDLKtD,ACKV,GDLa,CAACW,ACKD0C,IAAI,CAACC,GDLR,CCKG,CAAUvC,GDLI,GAA3B,EAA+B,ECKlC,EAAqC;ADJjC,ACKFV,IAAAA,MDLKL,CCKE,CAACM,CDLA,CAACM,CCKT,CAAY,SDLP,KAAoBX,KAAvB,EAA6B,uBCK/B,EAA0DoD,IAAI,CAACC,IAAL,CAAUvC,UAApE;ADJI,ACKJV,IAAAA,OAAO,CAACC,GAAR,CAAY,iCAAZ,EAA+C+C,IAAI,CAACC,IAApD;ADJItD,ACKJK,IAAAA,IDLIL,GAAG,ACKA,CDLCY,ACKAN,GAAR,CAAY,ODLR,GAAkBL,KAAlB,gBCKJ,EAA6CqD,IAAI,CAAC3C,QAAlD;AGZF,AJQK,ACKH0C,IAAAA,IAAI,CAACC,IAAL,CAAUvC,EGbA8C,KAAZ,EAAkB,CHahB,CAAqBF,YAArB,CAAkCL,IAAlC,EAAwCD,IAAI,CAACC,IAA7C;AGbgB,AJSd,ACKH,KDVE,MAKK;AACJ9C,MAAAA,GAAG,GAAGK,QAAQ,CAACC,cAAT,CAAwBb,KAAxB,CAAN;AIVc,AHelBoD,EAAAA,IAAI,CAACC,IAAL,GAAYA,IAAZ;ADJI,ACKJjD,EAAAA,OAAO,CDLAL,ACKCM,GDLE,ACKV,CAAY,GDLEN,GAAG,CAACe,UAAd,EAAyB,CCK7B,EAAkCsC,IAAlC;AGfE,AJWIrD,ACKP,QDLOA,GAAG,CAACe,UAAJ,CAAeC,OIXb6C,IJWF,CIXJ,AJW+BrD,GAA3B,EAAgCR,GAAhC;AIVJ,AJWG,UIXE+E,KAAL,GAAa;AACXM,AJWA,ACKN,KDlBkC,CIE5BA,AJYD,GIZI,AHgBAzB,EGhBE,eHgBX,CAA2BP,IAA3B,EAAiCQ,KAAjC,EAAuC;AGjBtB,AHkBf,KGlBE,CHkBC,CAACR,IAAI,CAACC,IAAT,EAAc;AGpBI,AHqBhB,QAAGD,IAAI,CAACS,kBAAR,EAA4BT,IAAI,CAACS,kBAAL;AGhB7B,AJWE,ACMF,GAFD,MAEM,EDNItD,ECMD6C,CDNN,GCMU,CAACU,qBAAR,EAA8B;ADLlC,ACMAV,GD7ByB,CAwB1B,ACKCA,IAAI,CAACU,qBAAL;AACD,GALoC,CAMrC;;ADNC,MAAG,CAAC/D,GAAJ,EAAQ,6BIbW;AAClBK,AJaAG,ACMF6C,EAAAA,EDNE7C,EIbAH,AHmBE,CDNC,ACMAwD,GDNGhD,ECMR,CGnBS,CAACP,CHmBGuD,EGnBX,CAAY,AJaE,CAAC5C,CCMjB,CAPqC,CAQrC,IGpBE,MJaM,CAAuBhB,KAAK,CAACiB,GAA7B,CAAN;AIZD,AJaC,GA3ByB,CA4B1B;ACMDkC,EAAAA,eAAe,CAACC,IAAD,CAAf;AAED;ADPE,MAAGpD,KAAK,CAACkB,SAAN,IAAmBlB,KAAK,CAACkB,SAAN,CAAgBC,GIdhB,GJcA,GAAyB,CAA5C,IAAkDZ,GAAG,CAACa,UAAJ,IAAkBb,GAAG,CAACa,UAAJ,CAAeD,MAAf,GAAwB,CAA/F,EAAkG;AIbjGf,AJcA,ACQJ,MGtBIA,GHsBK2D,IGtBE,CAAC1D,GAAR,CAAY,MHsBhB,CGtBI,AHsBqB+C,IAAzB,EAA+BQ,KAA/B,EAAqC;AGrBlC,AJcCvC,ACQF,IDREA,ECQE2C,IAAJ,MDRc,CAACzD,GAAD,EAAMP,KAAK,CAACkB,SAAZ,CAAZ;AACA;ACQF,MAAGkC,IAAI,CAACa,SAAL,IAAkBb,IAAI,CAACa,SAAL,CAAehB,MAApC,EAA2C;ADP1C3B,ACQC,EDRDA,aAAa,CAACf,GAAD,EAAMP,KAAN,CAAb,aIfkB;AACjBI,AJeD,ACQC4D,IAAAA,EGvBA5D,EHuBI,CDREG,ECQC,CDRR,CIfQ,CAACF,CHuBG+C,EGvBX,CAAY,CHuBL,CAASQ,KAAT,CGvBP,AHuBA;AGtBD,AJeF,ACQE,GAHD,MAGK;AACH;ADPJ,ACQII,IAAAA,IAAI,CDRC3C,ECQE,IAAI6C,MDRf,CAAsBnE,GAAtB,EAA2BwB,MCQhB,CAAcqC,EDRzB,EAAqC,CCQ1B,CAAP;ADPF,ACQEI,IAAAA,EDRIxC,ECQA,CAAC2C,QDRU,GAAGpE,ACQlB,GDRqB,ACQFqD,CDRGhC,GCQtB,ODRF,QIjBqB;AACnBhB,AJiBF,MIjBEA,AJiBIqB,OIjBG,CAACpB,AJiBI,GIjBZ,AJiBe,CIjBH,CJiBd,OIjBE;AACD,AJiBD,ACOE2D,IAAAA,EDPItC,ECOA,CAACuB,EDPI,GAAG,CCOZ,CDPF,CAHmC,CAKnC,ACKgB,YAAU;AACtB,aAAO,KAAKkB,WAAL,CAAiBP,KAAjB,CAAP;ADLJ,ACMG,KAFD,CDJCpC,WAAW,IAAIA,WAAW,CAACL,MAAZ,GAAqB,CAAvC,EAAyC,CAExC;ACKA,yCG1BmB;AAClBf,AJqBF,MIrBEA,AJqBCmB,OIrBM,CAAClB,CJqBE,EIrBV,CAAY,CJqBEkB,OIrBd,EJqBuB,CAACJ,MAAV,GAAmB,CAAnC,EAAqC;AIpBpC,AJqBC,ACIFf,EAAAA,MDJMuB,CCIC,CAACtB,CDJC,ECIT,CDJY,ACIA,CDJV,2BCIF,EAA0C2D,IAA1C;ADHE,ACIF,QDJMpC,CCICoC,IAAP,MDJiB,GAAGvC,QAAQ,CAACN,MAA3B;ACKH;ADJG,uBAAII,SAAJ,EItBW,AJsBIM,OAAf,CAAuB,UAACC,MAAD,EAASC,CAAT,EAAe;AIrBtC,AJsBE,ACKN,SAASmB,EG3BAmC,KH2BT,CAAiBrF,EG3Bb,CAAc,EH2BlB,EAAwB;AG1BlBoF,AJsBA,ACKJ,QG3BIA,EJsBMpD,CItBH,EAAE,AJsBI,GAAGF,EItBFgD,IJsBQ,CItBb,AJsBc9C,CItBHoD,EJsBhB,CItBK,GAAiB;AADV,AJwBZ,ACKJ,MAAIpF,CG7BF,GJwBMiC,CCKC,IDLL,CCKUzB,SAAV,IAAuBR,KAAK,KAAK,IAAjC,IAAyC,OAAOA,KAAP,KAAiB,SAA9D,EAAyEA,KAAK,GAAG,EAAR,CAFnD,CAGtB;AG3BC;AJsBG,ACMJ,MAAG,IDNIgC,GAAH,ACMMhC,EDNC,GCMR,KAAiB,QAApB,EAA8BA,KAAK,GAAGS,MAAM,CAACT,KAAD,CAAd,CAJR,CAKtB;ADNM;AACA,ACMN,MAAI,MDNK0B,CCME1B,IDNG,CAACgC,ACMX,GDNU,CAAR,CCMe,CDND,KIvBZ,EH6BR,EAA+B;AG5B7B,AJuBMC,ACMN7B,IAAAA,MDNM6B,CCMC,CAAC5B,CG5BN,EJsBS,ACMX,CAAY,EDNEqB,KAAK,CAACM,GAAD,CAAb,iBCMN,EAA2ChC,KAAK,CAACU,QAAjD,EAD6B,CAE7B,CG3BI,oDAAY,KAAKoE,KAAL,CAAWM,GAAvB,CAFF,EAGE;AAAQ,AJoBN1D,QIpBM,EJoBNA,KIpBa,AJoBR,CAACM,CIpBS,EJoBV,CAAL,EIpBoBsD,CJoBP9E,SAAb,CIpBe,CAAiB+E,IAAjB,CAAsB,IAAtB;AAAjB,AJqBC,ACML,WAAO3E,QAAQ,CAACC,IG9Bd,CADF,SH+BO,CAAwBb,KAAxB,CAAP;AGxBD,AJmBI,ACMJ,GAVqB,CAYtB,GDdI,MAMM,IAAG4B,WAAW,GAAGD,GAAjB,EAAqB;AACzB;AACA,aAAI,IAAIO,CAAC,GAAGP,GAAZ,EAAiBO,CAAC,GAAGN,WAArB,EAAkCM,CAAC,EAAnC,EAAsC;AACpC,ACMR,MAAG,OAAOlC,CDNEmC,CAAC,GAAGV,ACMD,CAACR,GAAb,IDNqB,CAACiB,ACMD,CDNA,CAAhB,QCMR,EAAmC;AACjC,EGhEe+C,eAAMf;AJ0Df,ACON,cDPS/B,CAAH,EAAK;AIpBf,AJqBYF,ACOR,IG5BEuD,KAAK,GAAG,AJqBFvD,KAAK,GIrBjB,AJqBoBE,CAAR,CInBZ;AJoBYV,ACOR,QAAM2B,IDPE3B,ACOE,GAAGsC,KDPG,CAAC7B,CAAD,CAAR,GAAc1B,ICOM,CAACR,IDPrB,CCO0B,CAACiB,GAAP,EAAYjB,KAAK,CAAC0C,KAAlB,CAA5B,CAJiC,CAKjC;AG1BJtC,AJmBY,ACQR,OG3BG,CAACC,GAAR,CAAY,IJmBG6B,CAAC,KAAKN,WAAW,GAAG,CAAvB,EAA0BA,EInBtC,EAA2C4D,KAA3C,EJmBiD,CIjBjD;AACA,AJiBY,ACQR,gBDRWtD,CAAC,KAAKP,GAAT,EAAcA,GAAG;AIhB7B,AJiBY;AIfZ,AJgBW,ACOPgC,IAAAA,iBAAiB,CAACP,IAAD,EAAOpD,KAAK,CAAC0C,KAAb,CAAjB,CARiC,CASjC;AGvBJ,AJgBS;AACF,ACOH,OD7BsC,CAuBpC,GCMKU,IAAI,CAACC,IAAZ;AGvBJL,AHwBG,GAxBqB,CA2BtB,cG3BOC,MAAT,CAAgB,6BAAC,IAAD;AAAM,EAAA,IAAI,EAAEuC;AAAZ,AJkBVvD,EIlBN,EAAuCrB,EJkBjCqB,KAAK,CIlBoC,CAACwD,CJkBlCtF,QAAQ,CAAC8B,GIlBgB,CAAuB,CJkBxC,EAAQH,IIlBS,CAAvC,CJkBsB,CAAhB,CIhBN,AJR0C,CAyBpC;AIhBN,AHHwB,eAgClB9B,KAhCkB;AGIxB,AJgBM,ACpBkB,MA6BpBiB,GA7BoB,CDoBZmB,CAAC,GAAGZ,KCSZP,GA7BoB,GDoBG,CAACc,CAAD,CAArB;AIfN,AHLwB,MA8BpBW,KA9BoB,UA8BpBA,KA9BoB;ADsBlB,ACtBkB,UDsBfT,KAAK,IAAIA,KAAK,KAAKlC,GAAnB,ACSLmB,IDT+Be,KAAK,ACtBhB,KDsBqBG,CAAvC,EAAyC;AACvC,ACvBgB,MA+BpBlB,SA/BoB,iCA+BR,EA/BQ,qBAiCtB;ADTM,YAAG,CAACkB,CAAJ,EAAM;AACJrC,ACSR,MAAMA,GAAG,CDTDA,ECSIa,CDTD,CAACN,MCSQ,CAACU,IDTb,CAAgBiB,KAAhB,EADI,CAEJ,ACQI,CAAuBhB,GAAvB,CAAZ;ADPO,SAHD,MAGM,IAAGgB,KAAK,KAAKG,CAAC,CAACC,WAAf,EAA2B;AAC/BC,ACOR,MAAII,IDPIJ,CCOR,EAAW,ODPO,CAACF,CAAD,CAAV,CAD+B,CAE/B;AACD,ACML,SDTU,MAGD;AACH,ACMNgC,IAAAA,MAAM,CAACC,IAAP,CAAY3B,KAAZ,EAAmBb,OAAnB,CAA2B,UAAAG,GAAG,EAAI;ADL5BjC,ACMJ,UDNIA,ACMEgD,GDNC,CAACR,CCMG,GAAGG,KAAK,CAACV,EDNhB,CAAiBC,ACMF,CAAnB,IDNI,EAAwBG,CAAxB;AACD,ACMHkC,MAAAA,YAAY,CAACvE,GAAD,EAAMiC,GAAN,EAAWe,KAAX,CAAZ;ADLC,ACMF,KAHD;ADFC,ACMF,GAzCqB,CA2CtB,CDjDE;AA0CD;AACF;ACOC7B,EAAAA,SAAS,CAACW,OAAV,CAAkB,UAAA0C,IAAI,EAAI;ADL5B,ACMItB,IAAAA,KDNK3B,CCMC,CAACiD,IAAD,EAAOxE,GAAP,CAAN,CDNJ,CAAuBA,GAAvB,EAA4BC,KAA5B,EAAkC;AAChC,ACMC,GAFD,GDJMwC,QAAQ,GAAG,EAAjB;AACA,ACOA,MDPMC,GCOC1C,GAAP,EDPc,GAAGC,KAAK,CAAC0C,KAAvB,CAFgC,CAGhC;ACOD,EAED;ADRE,MAAMC,QAAQ,GAAG5C,GAAG,CAAC6C,UAArB;AACAxC,EAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ,EAA0CsC,QAA1C;ACQK,SAAS2B,YAAT,CAAsBvE,GAAtB,EAA2BiC,GAA3B,EAAgCe,KAAhC,EAAuC;ADP5C,ACQA,qBDRIJ,QAAJ,EAAcd,OAAd,CAAsB,UAAAgB,IAAI,EAAI;AAC5BL,ACQF,IDREA,ECQER,GAAG,GDRG,CAACa,CCQC,GDRG,CAACC,IAAN,CAAR,ECQF,CDRwBD,CCQC,GDRG,CAACE,KAA3B;AACD,ACQCf,GDVF,CCUEA,CDhB8B,CAUhC,CCMK,GAAG,OAAN;ADLF,ACMC,GAJ2C,CAK5C;;;ADNA,ACOA,MAAI,CDPA,IAAIA,GAAR,ACOYwC,IDPGhC,ACOX,CAAaR,GAAb,CAAJ,EAAuB,CDPvB,EAAwB;AACtB,ACOA,QDPG,EAAEA,GAAG,IAAIS,QAAT,CAAH,EAAsB;AACpB,ACOFT,IAAAA,GAAG,GAAGA,GAAG,CAACyC,WAAJ,EAAN,IDPe1E,GAAb,EAAkBiC,GAAlB,EAAuBxB,SAAvB;AACD,ACODT,IAAAA,GAAG,CAACiC,GAAD,CAAH,GAAWe,KAAK,IAAI,EAApB;ADND,ACOA,GDvB+B,ACmBhC,CDDA,KCKO,IAAIf,GAAG,KAAK,OAAZ,EAAqB;AAAE;AAC5B,QAAI,CAACe,KAAD,IAAU,OAAOA,KAAP,KAAiB,QAA/B,EAAyC;ADL3C,ACMIhD,MAAAA,CDNA,ECMG,CAAC2E,CDNA1C,IAAR,ACMI,CAAU2C,GDNClC,ICMX,GAAoBM,CDNxB,EAAwB,ECMK,IAAI,EAA7B;ADLF,ACMC,KAFD,GDJGP,GCMI,IAAIO,CDNA,CAACf,GCMI,CDNL,CAAR,ECMiB,GDNCS,KCMMM,GDNE,CAACf,CCMV,GDNS,CAA7B,EAAmC,ACME,QAA9B,EAAwC;ADL7C,ACMA,WAAK,IAAI4C,CAAT,IAAc7B,KAAd,EAAqB,IDNRhD,GAAb,EAAkBiC,IAAlB,EAAuBS,QAAQ,CAACT,IAAD,CAA/B;AACD,ACMG;ADLL,ACMK,YAAI,OAAOe,KAAK,CAAC6B,CAAD,CAAZ,KAAoB,QAAxB,EAAkC;ADLzC,ACMS7E,UAAAA,GAAG,CAAC2E,KAAJ,CAAUE,CAAV,IAAe7B,KAAK,CAAC6B,CAAD,CAAL,GAAW,IAA1B;AACD,SAFD,MAEO;AACL7E,UAAAA,GAAG,CAAC2E,KAAJ,CAAUE,CAAV,IAAe7B,KAAK,CAAC6B,CAAD,CAApB;AACD;AACF;AACF;AACF,GAbM,MAaA;AACL;AACA;AACA;AACA;AACA,QAAI5C,GAAG,IAAIjC,GAAX,EAAgB;AACdA,MAAAA,GAAG,CAACiC,GAAD,CAAH,GAAWe,KAAK,IAAI,EAApB;AACD;;AACD,QAAIA,KAAJ,EAAW;AACT;AACAhD,MAAAA,GAAG,CAACuE,YAAJ,CAAiBtC,GAAjB,EAAsBe,KAAtB;AACD,KAHD,MAGO;AACLhD,MAAAA,GAAG,CAAC8E,eAAJ,CAAoB7C,GAApB;AACD;AACF;AACF;;eAEcgB","file":"react-simple-diff.e31bb0bc.js","sourceRoot":"..","sourcesContent":["import { setAttribute } from './index';\r\n\r\nexport function diff(dom, vnode, container){\r\n  //对比节点的变化\r\n  const ret = diffNode(dom, vnode)\r\n  console.log('ret.......................', ret);\r\n  if(container){\r\n    container.appendChild(ret)\r\n  }\r\n  return ret;\r\n}\r\n\r\nfunction diffNode(dom, vnode){\r\n  let out = dom;\r\n   // console.log('vnode.........', vnode);\r\n   if (vnode === undefined || vnode === null || typeof vnode === 'boolean') vnode = '';\r\n   // 如果是数字转成字符串\r\n   if(typeof vnode === 'number') vnode = String(vnode);\r\n   // 如果vnode是字符串\r\n   if (typeof vnode === 'string') {\r\n    // console.log('vnode......................', vnode)\r\n    //  console.log('vnode......................', vnode.nodeType)\r\n     if(dom && dom.nodeType === '3'){\r\n      if(dom.textContent !== vnode){\r\n        //更新内容\r\n        dom.textContent = vnode;\r\n      }\r\n     }else{\r\n      out = document.createTextNode(vnode);\r\n      if(dom && dom.parentNode){\r\n        dom.parentNode.replaceNode(out, dom);\r\n      }\r\n     }\r\n     // 创建文本节点\r\n     return out;\r\n   }\r\n   //非文本\r\n   if(!dom){\r\n    out = document.createElement(vnode.tag);\r\n   }\r\n   // 比较子节点（dom节点和组件）\r\n   if(vnode.childrens && vnode.childrens.length > 0 || (out.childNodes && out.childNodes.length > 0)){\r\n    // 对比组件和子节点\r\n    diffChildren(out, vnode.childrens);\r\n   }\r\n   diffAttribute(out, vnode);\r\n   return out;\r\n}\r\n\r\nfunction diffChildren(dom, vchildren){\r\n  const domChildren = dom.childNodes;\r\n  const children = [];\r\n  const keyed = {};\r\n\r\n  // 将有key的节点（用对象保存）和没有key的节点（用数组保存）分开\r\n  if(domChildren && domChildren.length > 0){\r\n\r\n  }\r\n  if(vchildren && vchildren.length > 0){\r\n    let min = 0;\r\n    let childrenLen = children.length;\r\n    [...vchildren].forEach((vchild, i) => {\r\n      // 获取虚拟DOM中的所有key\r\n      const key = vchild.key;\r\n      let child;\r\n      if(key){\r\n        // 如果有key，找到对应key值的节点\r\n        if(keyed[key]){\r\n          child = keyed[key];\r\n          keyed[key] = undefined;\r\n        }\r\n      }else if(childrenLen > min){\r\n        // 如果没有key，则优先找类型相同的节点\r\n        for(let j = min; j < childrenLen; j++){\r\n          let c = children[j];\r\n          if(c){\r\n            child = c;\r\n            children[j] = undefined;\r\n            if(j === childrenLen - 1) childrenLen--;\r\n            if(j === min) min++;\r\n            break;\r\n          }\r\n        }\r\n      }\r\n      // 对比\r\n      child = diffNode(child, vchild);\r\n      // 更新DOM\r\n      const f = domChildren[i];\r\n\r\n      if(child && child !== dom && child !== f){\r\n        // 如果更新前的对应位置为空，说明此节点是新增的\r\n        if(!f){\r\n          dom.appendChild(child);\r\n          // 如果更新后的节点和更新前对应位置的下一个节点一样，\r\n        }else if(child === f.nextSibling){\r\n          removeNode(f);\r\n          // 将更新后的节点移动到正确的位置\r\n        }else{\r\n          // 注意insertBefore的用法，第一个参数是要插入的节点\r\n          dom.insertBefore(child, f);\r\n        }\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction diffAttribute(dom, vnode){\r\n  const oldAttrs = {};\r\n  const newAttrs = vnode.attrs;\r\n  // dom 是原有的节点对象   vnode 是虚拟DOM\r\n  const domAttrs = dom.attributes;\r\n  console.log('domAttrs..................', domAttrs);\r\n  [...domAttrs].forEach(item => {\r\n    oldAttrs[item.name] = item.value;\r\n  });\r\n\r\n  // 比较\r\n  // 如果原来属性跟新的属性对比，不在新的属性中，则将其移除（属性值为underfine）\r\n  for(let key in oldAttrs){\r\n    if(!(key in newAttrs)){\r\n      setAttribute(dom, key, undefined);\r\n    }\r\n  }\r\n\r\n  // 更新 class='active' abc\r\n  for(let key in newAttrs){\r\n    if(oldAttrs[key] !== newAttrs[key]){\r\n      setAttribute(dom, key, newAttrs[key]);\r\n    }\r\n  }\r\n}","import Component from '../react/component';\r\nimport { diff } from './diff'\r\n\r\nconst ReactDOM = {\r\n  render,\r\n}\r\n\r\nfunction render(vnode, container, dom){\r\n  console.log('vnode......................', vnode);\r\n  return container.appendChild(_render(vnode));\r\n  // return diff(dom, vnode, container);\r\n}\r\n\r\nexport function renderComponent(comp){\r\n  let base;\r\n  const renderer = comp.render(); // jsx对象\r\n  base = _render(renderer);\r\n  if(comp.base && comp.componentWillUpdate){\r\n    comp.componentWillUpdate();\r\n  }\r\n  if(comp.base){\r\n    if(comp.componentDidUpdate) comp.componentDidUpdate();\r\n  }else{\r\n    if(comp.componentDidMount) comp.componentDidMount();\r\n  }\r\n\r\n  // 节点替换\r\n  if(comp.base && comp.base.parentNode){\r\n    console.log('comp.base.parentNode......................', comp.base.parentNode)\r\n    console.log('comp.base......................', comp.base)\r\n    console.log('base.111.....................', base.nodeType)\r\n    comp.base.parentNode.replaceChild(base, comp.base);\r\n  }\r\n  comp.base = base;\r\n  console.log('comp..............', comp);\r\n}\r\n\r\nfunction setComponentProps(comp, props){\r\n  if(!comp.base){\r\n    if(comp.componentWillMount) comp.componentWillMount();\r\n  }else if(comp.componentReceiveProps){\r\n    comp.componentReceiveProps();\r\n  }\r\n  // 设置组件的属性\r\n  comp.props = props;\r\n  // 渲染组件\r\n  renderComponent(comp);\r\n\r\n}\r\n\r\nfunction createComponent(comp, props){\r\n  let inst;\r\n  if(comp.prototype && comp.prototype.render){\r\n    // 如果是类定义的组件 则创建实例返回\r\n    inst = new comp(props);\r\n  }else{\r\n    // 如果是函数组件 将函数组件扩展成类组件 方便后面统一管理\r\n    inst = new Component(props);\r\n    inst.constructor = comp;\r\n    inst.render = function(){\r\n      return this.constructor(props);\r\n    }\r\n  }\r\n  console.log('inst......................', inst)\r\n  return inst;\r\n}\r\n\r\nfunction _render(vnode) {\r\n  // console.log('vnode.........', vnode);\r\n  if (vnode === undefined || vnode === null || typeof vnode === 'boolean') vnode = '';\r\n  // 如果是数字转成字符串\r\n  if(typeof vnode === 'number') vnode = String(vnode);\r\n  // 如果vnode是字符串\r\n  if (typeof vnode === 'string') {\r\n    console.log('vnode......................', vnode.nodeType)\r\n    // 创建文本节点\r\n    return document.createTextNode(vnode);\r\n  }\r\n\r\n  // 如果tag是函数，则渲染组件\r\n  if(typeof vnode.tag === 'function'){\r\n    // console.log('vnode.tag..............', vnode.tag);\r\n    // console.log('vnode.attrs..............', vnode.attrs);\r\n    // 1.创建组件\r\n    const comp = createComponent(vnode.tag, vnode.attrs);\r\n    // console.log('comp..............', comp);\r\n    // return;\r\n    // 2. 设置组件的属性\r\n    setComponentProps(comp, vnode.attrs);\r\n    // 3.组件渲染的节点对象返回\r\n    return comp.base;\r\n  }\r\n\r\n\r\n  // 否则就是虚拟DOM对象\r\n  const {\r\n    tag,\r\n    attrs,\r\n    childrens = [],\r\n  } = vnode;\r\n  // 创建节点对象\r\n  const dom = document.createElement(tag);\r\n  if (attrs) {\r\n    // 有属性\r\n    Object.keys(attrs).forEach(key => {\r\n      const value = attrs[key];\r\n      setAttribute(dom, key, value);\r\n    });\r\n  }\r\n\r\n  // 递归渲染子节点\r\n  childrens.forEach(node => {\r\n    render(node, dom)\r\n  });\r\n\r\n  return dom;\r\n}\r\n\r\n// 设置属性\r\nexport function setAttribute(dom, key, value) {\r\n  //将属性名className转换成class\r\n  if (key === 'className') {\r\n    key = 'class';\r\n  }\r\n  // 如果是事件 onClick onBlur ...\r\n  if (/on\\w+/.test(key)) {\r\n    //转小写\r\n    key = key.toLowerCase();\r\n    dom[key] = value || '';\r\n  } else if (key === 'style') { // 针对属性为style的处理\r\n    if (!value || typeof value === 'string') {\r\n      dom.style.cssText = value || '';\r\n    } else if (value && typeof value === 'object') {\r\n      for (let k in value) {\r\n        // {width: 20}\r\n        if (typeof value[k] === 'number') {\r\n          dom.style[k] = value[k] + 'px';\r\n        } else {\r\n          dom.style[k] = value[k];\r\n        }\r\n      }\r\n    }\r\n  } else {\r\n    // console.log('dom................', dom);\r\n    // console.log('key................', key);\r\n    // console.log('key in dom................', key in dom);\r\n    // 其他属性\r\n    if (key in dom) {\r\n      dom[key] = value || ''\r\n    }\r\n    if (value) {\r\n      // 更新值\r\n      dom.setAttribute(key, value);\r\n    } else {\r\n      dom.removeAttribute(key);\r\n    }\r\n  }\r\n}\r\n\r\nexport default ReactDOM;","import { renderComponent } from '../react-dom';\r\n\r\nclass Component{\r\n  constructor(props = {}){\r\n    this.props = props;\r\n    this.state = {};\r\n  }\r\n  setState(stateChange){\r\n    // 对象拷贝\r\n    Object.assign(this.state, stateChange);\r\n    // 渲染组件\r\n    renderComponent(this);\r\n  }\r\n}\r\n\r\nexport default Component;","import Component from './component';\r\n\r\nconst React = {\r\n  createElement,\r\n  Component\r\n}\r\n\r\nfunction createElement(tag, attrs = {}, ...childrens){\r\n  return {\r\n    tag, // 外层的标签\r\n    attrs, // 属性 是一个对象\r\n    childrens, // 是一个数组\r\n    // key: attrs.key || null\r\n  }\r\n}\r\n\r\nexport default React;","import React from './react';\r\nimport ReactDOM from './react-dom';\r\n\r\nconst ele = (\r\n  <div className='active' title='123'>\r\n    hello,<span>react</span>\r\n  </div>\r\n)\r\n\r\n// function Home(){\r\n//   return (\r\n//     <div>\r\n//       hello,<span>react</span>\r\n//     </div>\r\n//   )\r\n// }\r\n\r\nclass Home extends React.Component{\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      num: 0\r\n    };\r\n  }\r\n  componentWillMount(){\r\n    console.log('组件将要加载');\r\n  }\r\n  componentReceiveProps(){\r\n    console.log('props');\r\n  }\r\n  componentDidMount(){\r\n    console.log('组件加载完成');\r\n  }\r\n  componentWillUpdate(){\r\n    console.log('组件将要更新');\r\n  }\r\n  componentDidUpdate(){\r\n    console.log('组件更新完成');\r\n  }\r\n  handleClick(){\r\n    this.setState({\r\n      num: this.state.num + 1,\r\n    });\r\n  }\r\n  render(){\r\n    return (\r\n      <div>\r\n        hello,\r\n        <span>react{this.state.num}</span>\r\n        <button onClick={this.handleClick.bind(this)}>点我</button>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst title = 'active';\r\n\r\n// 核心：组件化开发\r\n\r\nconsole.log('title......................', title);\r\n\r\n// 两个问题：\r\n// 1.为什么ReactDOM.render()必须引入React？\r\n// 2.组件：函数组件，类组件\r\n\r\n// ReactDOM.render('ele', document.querySelector('#root'));\r\n// ReactDOM.render(ele, document.querySelector('#root'));\r\nReactDOM.render(<Home name={title} />, document.querySelector('#root'));\r\n\r\n// const ele = /*#__PURE__*/React.createElement(\"div\", {\r\n//   className: \"active\",\r\n//   title: \"123\"\r\n// }, \"hello,\", /*#__PURE__*/React.createElement(\"span\", null, \"react\"));"]}